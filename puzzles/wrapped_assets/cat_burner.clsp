; cat_burner.clsp by yakuhito
;; static puzzle that sends a message when CATs are burned

(mod (
  CAT_MOD_HASH
  BURN_INNER_PUZZZLE_MOD_HASH
  BRIDGING_PUZZLE_HASH
  ETH_TOKEN_BRIDGE_ADDRESS
  cat_parent_info
  tail_hash_hash ; (sha256 1 tail_hash)
  cat_amount
  eth_erc20_address
  eth_receiver_address
  time_now_ish
  my_amount
  my_puzzle_hash
  my_coin_id
)
  (include "condition_codes.clib")
  (include "curry.clib")
  (include "sha256tree.clib")

  (defun-inline main (cat_burn_coin_id)
    (list
      (list ASSERT_MY_COIN_ID my_coin_id)
      (list ASSERT_MY_AMOUNT my_amount)
      (list ASSERT_MY_PUZZLEHASH my_puzzle_hash)
      (list ASSERT_SECONDS_ABSOLUTE time_now_ish)
      (list ASSERT_COIN_ANNOUNCEMENT (sha256 cat_burn_coin_id my_coin_id))
      (list CREATE_COIN_ANNOUNCEMENT cat_burn_coin_id)
      (list
        CREATE_COIN
        BRIDGING_PUZZLE_HASH ; static
        my_amount ; allows changing min fee without changing puzzle hash
        1 ; sender_as_puzzle_hash
        ETH_TOKEN_BRIDGE_ADDRESS ; target on Eth
        (+ time_now_ish 315360000) ; deadline - 10 years
        (list eth_erc20_address eth_receiver_address cat_amount) ; message
      )
    )
  )

  (defun-inline stager (burn_inner_puzzle_self_hash)
    (main
      (sha256
        (if (= (strlen cat_parent_info) 32) cat_parent_info (x))
        (curry_hashes_inline CAT_MOD_HASH
          (sha256 1 CAT_MOD_HASH) ; CAT_MOD_HASH
          tail_hash_hash ; TAIL_HASH
          (curry_hashes_inline burn_inner_puzzle_self_hash
            (sha256 1 burn_inner_puzzle_self_hash) ; SELF_HASH
            (sha256 1 eth_receiver_address) ; TARGET_RECEIVER
          ) ; INNER_PUZZLE
        )
        cat_amount
      ) ; cat coin id
    )
  )

  (stager
    (curry_hashes_inline BURN_INNER_PUZZZLE_MOD_HASH
      (sha256 1 my_puzzle_hash)
      (sha256 1 eth_erc20_address)
    ) ; SELF_HASH
  )
)
