; message_coin.clsp by yakuhito
;; used to record messages from Ethereum - can be spent by the intended receiver (puzzle or singleton)

(mod (
    ; first curry (automated)
    SINGLETON_MOD_HASH
    SINGLETON_LAUNCHER_PUZZLE_HASH
    PORTAL_RECEIVER_LAUNCHER_ID

    ; second curry
    SENDER
    TARGET
    TARGET_IS_PUZZLE_HASH
    DEADLINE
    MESSAGE_HASH

    (receiver_parent_info receiver_puzzle_hash . receiver_amount) ; receiver_proof
    receiver_singleton_proof ;  (launcher_id . inner_puzzle_hash) or ()
    (parent_parent_info parent_inner_puzzle_hash) ; parent proof
    my_coin_id
  )

  (include condition_codes.clib)
  (include curry.clib)
  (include sha256tree.clib)

  (defun-inline verify_target () 
    (if TARGET_IS_PUZZLE_HASH
      (= receiver_puzzle_hash TARGET)
      (all
        (= TARGET (f receiver_singleton_proof))
        (= receiver_puzzle_hash (curry_hashes SINGLETON_MOD_HASH
          (sha256tree (c SINGLETON_MOD_HASH (c (f receiver_singleton_proof) SINGLETON_LAUNCHER_PUZZLE_HASH)))
          (r receiver_singleton_proof)
        ))
      )
    )
  )

  (defun-inline main (receiver_coin_id)
    (if (verify_target)
      (list
        (list ASSERT_SECONDS_ABSOLUTE DEADLINE)
        (list ASSERT_MY_COIN_ID my_coin_id)
        (list ASSERT_MY_PARENT_ID (sha256
          parent_parent_info
          (curry_hashes_inline SINGLETON_MOD_HASH
            (sha256tree (c SINGLETON_MOD_HASH (c PORTAL_RECEIVER_LAUNCHER_ID SINGLETON_LAUNCHER_PUZZLE_HASH)))
            parent_inner_puzzle_hash
          )
          1 ; parent amount
        ))
        (list CREATE_COIN_ANNOUNCEMENT receiver_coin_id) ; puzzle contains message info
        (list ASSERT_COIN_ANNOUNCEMENT (sha256 receiver_coin_id my_coin_id))
      )
      ; else
      (x)
    )
  )

  (defun-inline value_b32_or_x (v)
    (if (= (strlen v) 32) v (x))
  )

  (main
    (sha256
      (value_b32_or_x receiver_parent_info)
      (value_b32_or_x receiver_puzzle_hash)
      receiver_amount
    )
  )
)
